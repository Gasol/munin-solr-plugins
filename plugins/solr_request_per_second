#!/usr/bin/env python
# Copyright 2011 Gasol Wu. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
#    1. Redistributions of source code must retain the above copyright notice, this list of
#       conditions and the following disclaimer.
#
#    2. Redistributions in binary form must reproduce the above copyright notice, this list
#       of conditions and the following disclaimer in the documentation and/or other materials
#       provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY Gasol Wu ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those of the
# authors and should not be interpreted as representing official policies, either expressed
# or implied, of Gasol Wu.

import os, sys, urllib2
try:
    import xml.etree.cElementTree as etree
except ImportError:
    try:
        import xml.etree.ElementTree as etree
    except ImportError:
        print 'python >= 2.5'
        sys.exit()

SOLR_URL = os.getenv('SOLR_URL') or 'http://localhost:8080/solr'
SOLR_ADMIN_URL = os.getenv('SOLR_ADMIN_URL') or 'http://localhost:8080/solr/admin/cores'

def get_cores():
    url = '%s?action=status' % SOLR_ADMIN_URL
    f = urllib2.urlopen(url)
    xml = etree.fromstring(f.read())
    cores = [lst.attrib['name'].strip() for lst in xml.findall('./lst/lst')]
    return cores

def main():
    if len(sys.argv) > 1 and 'config' == sys.argv[1]:
        print 'graph_title Requests Per Second'
        print 'graph_category solr'
        print 'graph_vlabel requests / second'
        print 'graph_args --base 1000 -l 0'
        for core in get_cores():
            print 'solr_%s_avgRequestsPerSecond.label %s' % (core, core)
            print 'solr_%s_avgRequestsPerSecond.type GAUGE' % core
            print 'solr_%s_avgRequestsPerSecond.graph yes' % core
        sys.exit()

    for core in get_cores():
        url = '%s/%s/admin/stats.jsp' % (SOLR_URL, core)
        f = urllib2.urlopen(url)
        html = etree.fromstring(f.read())
        for entry in html.findall('./solr-info/QUERYHANDLER/entry'):
            name = entry.find('name').text.strip()
            clazz = entry.find('class').text.strip()
            if (name == 'standard' or name == 'search') and clazz == 'org.apache.solr.handler.component.SearchHandler':
                stats = dict((stat.attrib['name'], stat.text.strip()) for stat in entry.find('stats'))
                print 'solr_%s_avgRequestsPerSecond.value %.5f' % (core, float(stats['avgRequestsPerSecond']))

if '__main__' == __name__:
    main()
